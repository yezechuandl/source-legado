[
  {
    "bookSourceComment": "//2025.3.8 切换接口重新设置登陆cookie ◎夜泽川◎\n//2025.3.7 重构书源，增加接口选择。◎夜泽川◎\n//2025.3.6 本地书架变更为添加时间排序 ◎夜泽川◎\n//2025.3.5 “我的书评”改为uid精准匹配。◎夜泽川◎\n//2025.3.2 优化正文，限制预下载 ◎夜泽川◎\n//2025.3.1 优化发现及正文 ◎夜泽川◎\n//2025.2.28 优化书评展示及发送，修复已知问题 ◎夜泽川◎\n//2025.2.27 更正登录信息展示 \n//2025.2.26 新增书评展示。（其实也没多少评论） ◎夜泽川◎\n//2025.2.23 处理正文文本获取时可能出现的错误。（三次试错）◎夜泽川◎\n//2025.2.22 加入本地书架功能（与阅读书架隔离），网络书架的替代品（因为经验值），未注册用户也可使用。\n（实验性功能，不建议加入过多，可能会出现未知问题，用之前记得备份好🧐）\n//2025.2.17 处理网络书架翻页的相关问题 ◎夜泽川◎\n//2025.2.16 优化发现 ◎夜泽川◎\n//2025.2.13 新增书源更新检测，根据书源编辑时间戳判断，修改源会导致判断错误。◎夜泽川◎\n//2025.2.12 新增网络书架处理（仅登录用户）,动态获取发现。◎夜泽川◎\n//2025.2.9 自动处理正文验证。◎夜泽川◎\n//2025.1.26 修复登录函数中与阅读内置变量冲突。◎夜泽川◎\n//2025.1.24 优化登录规则 ◎夜泽川◎//2024.7.26 ◎夜泽川◎\n//搜索和发现需要封面可复制规则到相应位置，因为封面是从详情取的，所以可能会导致加载变慢甚至超时，自行斟酌。↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\na@href\n<js>\nul = GetUL() + result;\njava.ajax(ul);\n</js>\n[property$=image]@content",
    "bookSourceGroup": "自制,零",
    "bookSourceName": "®️爱丽丝书屋",
    "bookSourceType": 0,
    "bookSourceUrl": "爱丽丝书屋 by.夜泽川",
    "bookUrlPattern": "https?:\\/\\/.*alicesw.*\\.(org|xyz)/novel/\\d+\\.html",
    "coverDecodeJs": "",
    "customOrder": 102,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\neval(String(source.loginUrl));\nvar timestamp = new Date().getTime();\nvar uptime = cache.get(\"uptime\");\nif(!uptime){\n      update();\n      cache.put(\"uptime\",(timestamp + 21600000).toString());\n      } else if(timestamp >= Number(uptime)) {\n      \tupdate();\n      cache.delete(\"uptime\");\n      cache.put(\"uptime\",(timestamp + 21600000).toString());\n}\nlet Cookie = cookie.getCookie(GetUL());\nif (!/lf_user_auth/.test(Cookie) && source.getLoginHeader()) {\n\tlet ck = source.getLoginHeaderMap()['Cookie']\n\tcookie.setCookie(GetUL(),ck);\n\tjava.toast('登录状态掉了，已重新登陆');\n}\nvar result = [];\nvar push = (title, url, size) =>\n    result.push({\n        title: title,\n        url: url ? GetUL() + url : url,\n        style: {\n            layout_flexGrow: 1,\n            layout_flexBasisPercent: size\n        }\n    });\npush(`当前站源：${GetUL()}`,null,1)\nif (source.getLoginHeader()) {\n    let jc = source.getLoginHeaderMap();\n    let inf = decodeURIComponent(jc.get(\"Cookie\"));\n    let info = decodeURIComponent(inf).match(/\\{[\\s\\S]+\\}/)[0];\n    let username = JSON.parse(info)['username'];\n    let expe = java.ajax(`${GetUL()}/user/index/index.html`);\n    let ex = org.jsoup.Jsoup.parse(expe).select('.app_accountBlock_lis ul li');\n    push(`用户◎${username}◎中心`, null, 1);\n    push(\"书架\", \"/user/bookshelf?page={{page}}\", 0.45);\n    push(\"阅读记录\", \"/user/recentread/index.html\", 0.45);\n    ex.forEach(xp => {\n        nam = String(xp.text()).replace(/[\\s\\n]/g, \"\").replace(/\\d+/, \"：$&\");\n        push(nam, null, 0.45);\n    });\n} else {\n    push(\"未登录\", null, 1);\n}\npush(\"--------书库--------\", null, 1);\npush(\"最近更新\", \"/all/order/update_time+desc.html?page={{page}}\", 0.45);\npush(\"原创\", \"/original.html?page={{page}}\", 0.45);\npush(\"排行\", null, 1);\nvar src = java.ajax(`${GetUL()}/all/order/hits+desc.html`);\nvar ph = org.jsoup.Jsoup.parse(src).select('.paihang_ds a');\nph.forEach(ta => {\n    nam = ta.text()\n    ul = ta.attr('href')\n    push(nam, ul, 0.45);\n})\npush(\"分类\", null, 1);\nvar tag = org.jsoup.Jsoup.parse(src).select('.fenlei_ds a');\ntag.forEach(ta => {\n    nam = ta.text()\n    ul = String(ta.attr('href')).replace(/$/, \"?page={{page}}\");\n    push(nam, ul, 0.25);\n})\nJSON.stringify(result);",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "jsLib": "nk = \"PGh0bWw+CjxoZWFkPgogICAgPG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iMDt1cmw9bGVnYWRvOi8vaW1wb3J0L1NvdXJjZT9zcmM9aHR0cHM6Ly9mYXN0bHkuanNkZWxpdnIubmV0L2doL3llemVjaHVhbmRsL3NvdXJjZS1sZWdhZG9AbWFpbi9zb3VyY2Uv54ix5Li95Lid5Lmm5bGLLmpzb24iPgogICAgPHN0eWxlPgogICAgICAgIC5ub3RpY2UtYm94IHsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsgLyog5ZCv55SoRmxleGJveOW4g+WxgCAqLwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJub3RpY2UtYm94Ij4KICAgICAgICA8cD7oi6Xot7PovazmnKroh6rliqjmiafooYw8YnI+CiAgICAgICAgPGEgaHJlZj0ibGVnYWRvOi8vaW1wb3J0L1NvdXJjZT9zcmM9aHR0cHM6Ly9mYXN0bHkuanNkZWxpdnIubmV0L2doL3llemVjaHVhbmRsL3NvdXJjZS1sZWdhZG9AbWFpbi9zb3VyY2Uv54ix5Li95Lid5Lmm5bGLLmpzb24iPuivt+aJi+WKqOeCueWHu+atpOWkhDwvYT48L3A+CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+\"\n\nfunction GetUL() {\n\tconst { source } = this\n\tlet sourceul = JSON.parse(source.getVariable()).sourl;\n\treturn sourceul;\n}\n\n//计算最终value值\nfunction getval(kk) {\n\t   const { java } = this\n    var val = \"\";\n    for (var i = 0; i <= kk.length - 1; i++) {\n        var str = kk.charAt(i);\n        var code = str.charCodeAt();\n        val += parseInt(code) + 1;\n    }\n    valu = java.md5Encode(val);\n    return valu;\n}\n\nfunction timeov(times) {\n    const date = new Date(times);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const seconds = String(date.getSeconds()).padStart(2, '0');\n    \n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\n//自定义书架\nfunction booklist() {\n\tconst { java , source } = this\n let all = JSON.parse(source.getVariable()).booklist;\n let list = String(JSON.stringify(all));\n let hm = \"PCFET0NUWVBFIGh0bWw+PGh0bWwgbGFuZz16aC1DTj48aGVhZD48bWV0YSBjaGFyc2V0PVVURi04PjxtZXRhIG5hbWU9dmlld3BvcnQgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSI+PHRpdGxlPuacrOWcsOS5puaetjwvdGl0bGU+PHN0eWxlPmJvZHl7bWFyZ2luOjA7cGFkZGluZzoyMHB4O2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sc3lzdGVtLXVpLCJTZWdvZSBVSSIsUm9ib3RvLHNhbnMtc2VyaWY7YmFja2dyb3VuZDojZjVmNWY3fS5jb3JuZXItdGV4dHtwb3NpdGlvbjpmaXhlZDt0b3A6MjBweDtsZWZ0OjIwcHg7Zm9udC1zaXplOi45ZW07Y29sb3I6Izg2ODY4YjtvcGFjaXR5Oi45O3otaW5kZXg6MTAwO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuOCk7cGFkZGluZzo1cHggMTBweDtib3JkZXItcmFkaXVzOjZweDtiYWNrZHJvcC1maWx0ZXI6Ymx1cigycHgpO2JveC1zaGFkb3c6MCAycHggNHB4IHJnYmEoMCwwLDAsLjA1KX0uc2hlbGYtY29udGFpbmVye21heC13aWR0aDoxMjAwcHg7bWFyZ2luOjAgYXV0bztiYWNrZ3JvdW5kOiNmZmY7Ym9yZGVyLXJhZGl1czoxOHB4O2JveC1zaGFkb3c6MCA0cHggMTJweCByZ2JhKDAsMCwwLC4xKTtwYWRkaW5nOjMwcHg7cG9zaXRpb246cmVsYXRpdmV9LnNoZWxmLXRpdGxle3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToyLjVyZW07Y29sb3I6IzFkMWQxZjttYXJnaW46MCAwIDMwcHggMDtwYWRkaW5nLWJvdHRvbToyMHB4O2JvcmRlci1ib3R0b206MnB4IHNvbGlkICNmMGYwZjB9LmdyaWR7ZGlzcGxheTpncmlkO2dyaWQtdGVtcGxhdGUtY29sdW1uczpyZXBlYXQoYXV0by1maWxsLG1pbm1heCgyNTBweCwxZnIpKTtnYXA6MjVweDtwYWRkaW5nOjE1cHggMH0uYm9vay1pdGVte2JhY2tncm91bmQ6I2ZmZjtib3JkZXItcmFkaXVzOjEycHg7cGFkZGluZzoxOHB4O2JveC1zaGFkb3c6MCAycHggOHB4IHJnYmEoMCwwLDAsLjA4KTt0cmFuc2l0aW9uOnRyYW5zZm9ybSAuMnMsYm94LXNoYWRvdyAuMnM7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0uYm9vay1pdGVtOmhvdmVye3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0zcHgpO2JveC1zaGFkb3c6MCA0cHggMTZweCByZ2JhKDAsMCwwLC4xMil9LmNvdmVyLWNvbnRhaW5lcnt3aWR0aDoxMDAlO2FzcGVjdC1yYXRpbzozLzQ7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLWJvdHRvbToxNXB4fS5jb3Zlci1pbWd7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvYmplY3QtZml0OmNvbnRhaW47Ym9yZGVyLXJhZGl1czo4cHh9LmJvb2stbmFtZXtmb250LXNpemU6MS4xZW07bWFyZ2luOjAgMCA4cHggMDtjb2xvcjojMWQxZDFmO2ZvbnQtd2VpZ2h0OjYwMH0uYm9vay1hdXRob3J7Zm9udC1zaXplOi45ZW07Y29sb3I6IzY2NjttYXJnaW4tYm90dG9tOjEycHh9LmJvb2staW5mb3tmb250LXNpemU6LjllbTtjb2xvcjojODY4NjhiO2xpbmUtaGVpZ2h0OjEuNTtoZWlnaHQ6NC41ZW07b3ZlcmZsb3c6aGlkZGVuO2Rpc3BsYXk6LXdlYmtpdC1ib3g7LXdlYmtpdC1saW5lLWNsYW1wOjM7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsO2ZsZXgtZ3JvdzoxfS5jb3B5cmlnaHQtYWxlcnR7cG9zaXRpb246Zml4ZWQ7dG9wOjIwcHg7bGVmdDoyMHB4O3otaW5kZXg6OTk5O2NvbG9yOiNmNDQ7Zm9udC1zaXplOjE4cHg7Zm9udC13ZWlnaHQ6NzAwO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuOSk7cGFkZGluZzo4cHggMTVweDtib3JkZXItcmFkaXVzOjZweDtib3gtc2hhZG93OjAgMnB4IDhweCByZ2JhKDI1NSw2OCw2OCwuMyk7YW5pbWF0aW9uOnNoYWtlIC44cyBlYXNlfUBrZXlmcmFtZXMgc2hha2V7MCUsMTAwJXt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKX0yNSV7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTVweCl9NzUle3RyYW5zZm9ybTp0cmFuc2xhdGVYKDVweCl9fS5zaGVsZi1jb250YWluZXJ7bWF4LXdpZHRoOjEyMDBweDttYXJnaW46MCBhdXRvO2JhY2tncm91bmQ6I2ZmZjtib3JkZXItcmFkaXVzOjE4cHg7Ym94LXNoYWRvdzowIDRweCAxMnB4IHJnYmEoMCwwLDAsLjEpO3BhZGRpbmc6MzBweDttYXJnaW4tdG9wOjUwcHh9PC9zdHlsZT48Ym9keT48ZGl2IGNsYXNzPW9yaWdpbmFsLWF1dGhvcj7mupDkvZzogIXvvJrlpJzms73lt508L2Rpdj48ZGl2IGNsYXNzPXNoZWxmLWNvbnRhaW5lcj48aDEgY2xhc3M9c2hlbGYtdGl0bGU+5pys5Zyw5Lmm5p62PC9oMT48ZGl2IGlkPWJvb2tzaGVsZj48L2Rpdj48L2Rpdj48c2NyaXB0PuKXjuWPguiAg+agh+ivhuKXjgogICAgICAgIGZ1bmN0aW9uIHJlbmRlckJvb2tzaGVsZigpe2NvbnN0IGNvbnRhaW5lcj1kb2N1bWVudFsiZ2V0RWxlbWVudEJ5SWQiXSgnYm9va3NoZWxmJyk7bGV0IGh0bWw9Jyc7aWYobGlzdFsibGVuZ3RoIl09PT0gMCl7aHRtbD0gJzxkaXYgY2xhc3M9XCJlbXB0eS1tZXNzYWdlXCI+XHU2NjgyXHU2NWY2XHU2Y2ExXHU2NzA5XHU0ZTY2XHU3YzRkXHVmZjBjXHU1ZmViXHU1M2JiXHU2ZGZiXHU1MmEwXHU1NDI3XHVmZjAxPC9kaXY+J31lbHNlIHtodG1sPSAnPGRpdiBjbGFzcz1cImdyaWRcIj4nO2xpc3RbInJldmVyc2UiXSgpWyJmb3JFYWNoIl0oKGJvb2spPT57aHRtbCs9ICgiXHgwRFx4MEEgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYm9vay1pdGVtXCI+XHgwRFx4MEEgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdmVyLWNvbnRhaW5lclwiPlx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIiIrYm9va1siaW1nIl0rIlwiIGFsdD1cIiIrYm9va1sibmFtZSJdKyJcIiBjbGFzcz1cImNvdmVyLWltZ1wiPlx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Plx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cImJvb2stbmFtZVwiPiIrYm9va1sibmFtZSJdKyI8L2gzPlx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib29rLWF1dGhvclwiPiIrYm9va1siYXV0aG9yIl0rIjwvZGl2Plx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiYm9vay1pbmZvXCI+Iitib29rWyJpbmZvIl0rIjwvcD5ceDBEXHgwQSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiIitib29rWyJ1cmwiXSsiXCIgY2xhc3M9XCJib29rLWxpbmtcIj5cdTdhY2JcdTUzNzNcdTk2MDVcdThiZmI8L2E+XHgwRFx4MEEgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4iKX0pO2h0bWwrPSAnPC9kaXY+J307Y29udGFpbmVyWyJpbm5lckhUTUwiXT0gaHRtbH1mdW5jdGlvbiBjaGVja0NvcHlyaWdodCgpe2NvbnN0IGF1dGhFbGVtZW50PWRvY3VtZW50WyJxdWVyeVNlbGVjdG9yIl0oJy5vcmlnaW5hbC1hdXRob3InKTtjb25zdCBpc1ZhbGlkPWF1dGhFbGVtZW50JiYgYXV0aEVsZW1lbnRbInRleHRDb250ZW50Il1bInRyaW0iXSgpPT09ICdcdTZlOTBcdTRmNWNcdTgwMDVcdWZmMWFcdTU5MWNcdTZjZmRcdTVkZGQnO2lmKCFpc1ZhbGlkJiYgICFkb2N1bWVudFsicXVlcnlTZWxlY3RvciJdKCcuY29weXJpZ2h0LWFsZXJ0Jykpe2NvbnN0IGFsZXJ0PWRvY3VtZW50WyJjcmVhdGVFbGVtZW50Il0oJ2RpdicpO2FsZXJ0WyJjbGFzc05hbWUiXT0gJ2NvcHlyaWdodC1hbGVydCc7YWxlcnRbInRleHRDb250ZW50Il09ICdcdTk2MzJcdTc2ZDdcdTc1MjhcdTI1Y2VcdTZlOTBcdTRmNWNcdTgwMDVcdTRlM2FcdTU5MWNcdTZjZmRcdTVkZGQnO2RvY3VtZW50WyJib2R5Il1bImFwcGVuZENoaWxkIl0oYWxlcnQpfX13aW5kb3dbImFkZEV2ZW50TGlzdGVuZXIiXSgnRE9NQ29udGVudExvYWRlZCcsKCk9PntyZW5kZXJCb29rc2hlbGYoKTtjaGVja0NvcHlyaWdodCgpO3NldEludGVydmFsKGNoZWNrQ29weXJpZ2h0LDEwMDAwKX0pPC9zY3JpcHQ+\"\n let cc = java.base64Decode(hm);\n let html = String(cc).replace(/◎参考标识◎/,`const list = ${list}`);\n //java.log(html);\nreturn java.base64Encode(html);;\n}\n\ncodesvg = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIAogICAgIHZpZXdCb3g9IjAgMCA3MDAgMjAwIiAKICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJub25lIgogICAgIHN0eWxlPSJ3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOyI+CiAgPHJlY3Qgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIgZmlsbD0id2hpdGUiLz4KICAKICA8IS0tIOmhtumDqOagh+mimCAtLT4KICA8dGV4dCB4PSI1MCUiIHk9IjQwIiAKICAgICAgICBmb250LXNpemU9IjIwIiAKICAgICAgICBmb250LXdlaWdodD0iYm9sZCIgCiAgICAgICAgdGV4dC1hbmNob3I9Im1pZGRsZSIgCiAgICAgICAgZmlsbD0iIzAwMCI+6YCJ5oup5Y+R6YCB57G75Z6LPC90ZXh0PgogIAogIDwhLS0g6K+E6K665qih5Z2XIC0tPgogIDx0ZXh0IHg9IjI1JSIgeT0iOTAiIAogICAgICAgIGZvbnQtc2l6ZT0iMTYiIAogICAgICAgIGZvbnQtd2VpZ2h0PSJib2xkIiAKICAgICAgICB0ZXh0LWFuY2hvcj0ibWlkZGxlIiAKICAgICAgICBmaWxsPSIjMDAwIj7or4Torro8L3RleHQ+CiAgPHRleHQgeD0iMjUlIiB5PSIxMTAiIAogICAgICAgIGZvbnQtc2l6ZT0iMTQiIAogICAgICAgIGZvbnQtd2VpZ2h0PSJib2xkIiAKICAgICAgICB0ZXh0LWFuY2hvcj0ibWlkZGxlIiAKICAgICAgICBmaWxsPSIjMDAwIj4o5aGr5YaZIuivhOiuuiIpPC90ZXh0PgogIAogIDwhLS0g5Zue5aSN5qih5Z2XIC0tPgogIDx0ZXh0IHg9Ijc1JSIgeT0iOTAiIAogICAgICAgIGZvbnQtc2l6ZT0iMTYiIAogICAgICAgIGZvbnQtd2VpZ2h0PSJib2xkIiAKICAgICAgICB0ZXh0LWFuY2hvcj0ibWlkZGxlIiAKICAgICAgICBmaWxsPSIjMDAwIj7lm57lpI08L3RleHQ+CiAgPHRleHQgeD0iNzUlIiB5PSIxMTAiIAogICAgICAgIGZvbnQtc2l6ZT0iMTQiIAogICAgICAgIGZvbnQtd2VpZ2h0PSJib2xkIiAKICAgICAgICB0ZXh0LWFuY2hvcj0ibWlkZGxlIiAKICAgICAgICBmaWxsPSIjMDAwIj4o5aGr5YaZIkBpZCIpPC90ZXh0PgogIAogIDwhLS0g5bqV6YOo5L+h5oGvIC0tPgogIDx0ZXh0IHg9IjUwJSIgeT0iMTgwIiAKICAgICAgICBmb250LXNpemU9IjE0IiAKICAgICAgICBmb250LXdlaWdodD0iYm9sZCIgCiAgICAgICAgdGV4dC1hbmNob3I9Im1pZGRsZSIgCiAgICAgICAgZmlsbD0iIzAwMCI+5qW85bGCaWTnroDku4vmnIk8L3RleHQ+Cjwvc3ZnPg==\"",
    "lastUpdateTime": 1741432016292,
    "loginUi": "[   \n    {\n        \"name\": \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"update()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"更新日志【简】\",\n        \"type\": \"button\",\n        \"action\": \"Updatelog()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"获取接口\",\n        \"type\": \"button\",\n        \"action\": \"Geturls()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"接口1\",\n        \"type\": \"button\",\n        \"action\": \"Puturl(0)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"接口2\",\n        \"type\": \"button\",\n        \"action\": \"Puturl(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"接口3\",\n        \"type\": \"button\",\n        \"action\": \"Puturl(2)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"接口4\",\n        \"type\": \"button\",\n        \"action\": \"Puturl(3)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"用户名/邮箱\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"密码\",\n        \"type\": \"password\"\n    },\n    {\n        \"name\": \"注册\",\n        \"type\": \"button\",\n        \"action\": \"reg()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"登录\",\n        \"type\": \"button\",\n        \"action\": \"Login()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"登出\",\n        \"type\": \"button\",\n        \"action\": \"out()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"◀◎展示登录信息◎▶\",\n        \"type\": \"button\",\n        \"action\": \"show()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"◎↓网络书架功能区↓◎\",\n        \"type\": \"button\",\n        \"action\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"书籍ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"添加网络书架\",\n        \"type\": \"button\",\n        \"action\": \"AFBook(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"移除网络书架\",\n        \"type\": \"button\",\n        \"action\": \"AFBook(0)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"打开书架\",\n        \"type\": \"button\",\n        \"action\": \"BookShelf()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"◎↓本地书架功能区↓◎\",\n        \"type\": \"button\",\n        \"action\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"放置\",\n        \"type\": \"button\",\n        \"action\": \"bookinto()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        \"name\": \"删除\",\n        \"type\": \"button\",\n        \"action\": \"bookmove('one')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        \"name\": \"⚠️清空⚠️\",\n        \"type\": \"button\",\n        \"action\": \"bookmove('all')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        \"name\": \"打开本地书架\",\n        \"type\": \"button\",\n        \"action\": \"inBookShelf()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    }\n]",
    "loginUrl": "var r = {\n    \"urls\": [],\n    \"sourl\": \"https://alicesw.org\",\n    \"booklist\": []\n};\nif (!String(source.getVariable())) {\n    source.setVariable(JSON.stringify(r, null, \"\\t\"));\n    java.toast('已初始化，使用默认站源');\n}\nvar sgv = JSON.parse(source.getVariable());\nvar sg = source.get(\"list\");\nvar ul = GetUL();\n\nfunction reg() {\n    java.startBrowser(`${ul}/user/user/reg.html`, \"注册账号\");\n}\n\nfunction Updatelog() {\n    let cont = String(source.variableComment);\n    let log = java.base64Decode(cont);\n    java.longToast(\"\\n\" + log);\n}\n\nfunction login() {}\n\nfunction Geturls() {\n    let sgv1 = sgv.urls;\n    sgv1.length = 0\n    sgv1.push(\"https://alicesw.org\");\ntry {\n    let res = org.jsoup.Jsoup.parse(java.ajax('https://alicesw.click/')).select('.button-box:nth-of-type(2)').attr('href');\n        //数组去重\n        const seen = new Set();\n        let src = java.ajax(res).matchAll(/url=(https[^\"]+)\\/?\\\"/g);\n        for (let match of src) {\n            const url = match[1];\n            if (!seen.has(url)) {\n                sgv1.push(url);\n                seen.add(url);\n            }\n        }\n        source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n        java.toast(`获取成功，共获取到${sgv1.length}个接口`);\n    } catch (e) {\n    \t   java.log(e);\n        java.toast('获取失败请检查网络状况');\n    }\n}\n\nfunction Puturl(e) {\n    if (sgv.urls.length > 0 && (e + 1) <= sgv.urls.length) {\n        sgv.sourl = sgv.urls[e];\n        source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n        let stime = new Date().getTime();\n        java.ajax(sgv.urls[e]);\n        let etime = new Date().getTime();\n        let speedtime = (etime - stime) / 1000;\n        java.toast(`已设置接口为：\\n${sgv.urls[e]}\\n♦解析用时${speedtime}秒♦`);\n    } else if (sgv.urls.length === 0) {\n        java.toast('\\n当前没有接口，请获取后选择');\n    } else if ((e + 1) > sgv.urls.length) {\n        java.toast(`暂无第${e+1}接口`);\n    }\n}\n\nfunction Login() {\n    cookie.removeCookie(ul);\n    const loginul = `${ul}/user/user/login.html`;\n    const codeul = `${ul}/user/user/verify.html`;\n    \n    const na = result['用户名/邮箱'];\n    const pa = result['密码']\n    if (String(na && pa)) {\n        let phpid = java.get(codeul, {}).header(\"set-cookies\");\n        java.log(phpid);\n        let code = java.getVerificationCode(codeul);\n        let body = `username=${na}&password=${pa}&code=${code}`\n        let cook = java.post(loginul, body, {\n            \"x-requested-with\": \"XMLHttpRequest\",\n            \"Cookie\": phpid\n        });\n        let ck = String(cook.cookies()).replace(/[{}]/g, \"\").replace(\",\", \"; \");\n        //java.log(String(ck))\n        let headers = JSON.stringify({\n            \"Cookie\": ck\n        });\n        let usercode = JSON.parse(cook.body()).msg\n        java.toast(usercode);\n        if (ck) {\n            source.putLoginHeader(headers);\n            cookie.replaceCookie(GetUL(), ck);\n        } else {\n            source.removeLoginHeader();\n            cookie.removeCookie(GetUL());\n        }\n    }\n}\n\nfunction out() {\n    source.removeLoginHeader();\n    cookie.removeCookie(GetUL());\n    java.toast(\"已退出登录状态\");\n}\n\nfunction show() {\n    let jc = source.getLoginHeaderMap();\n    let us, id, codes\n    if (jc) {\n        let inf = decodeURIComponent(jc.get(\"Cookie\"));\n        let info = decodeURIComponent(inf).match(/\\{[\\s\\S]+\\}/)[0];\n        //java.log(info);\n        us = JSON.parse(info)['username'];\n        id = JSON.parse(info)['uid'];\n        codes = \"✔️已登录\";\n    } else {\n        us = \"无\";\n        id = \"无\";\n        codes = \"❌未登录\";\n    }\n    let txt = `\\n◎用户：${us}◎\\n◎用户ID：${id}◎\\n◎登录状态：${codes}◎`\n    java.longToast(txt);\n}\n\nfunction update() {\n    sourcetime = String(source.lastUpdateTime);\n    const upul = \"https://fastly.jsdelivr.net/gh/yezechuandl/source-legado@main/source/爱丽丝书屋.json\"\n    let cc = java.ajax(upul)\n    let uptime = String(JSON.parse(cc)[0].lastUpdateTime)\n    if (Number(uptime) > Number(sourcetime)) {\n        java.toast(\"检测到更新，正在跳转……\");\n        Packages.java.lang.Thread.sleep(2000)\n        java.startBrowser('data:text/html;base64,' + nk, '更新');\n    } else {\n        java.toast(`本地书源版本较新，无需更新。\\n本地书源编辑时间：${timeov(Number(sourcetime))}\\n网络书源更新时间：${timeov(Number(uptime))}`);\n    }\n}\n\nfunction AFBook(ta) {\n    let info = result['书籍ID']\n    if (String(info) && source.getLoginHeaderMap()) {\n        let bookid = info\n        java.log(bookid);\n        try {\n            let url\n            if (ta) {\n                url = `${ul}/user/bookshelf/add?novel_id=${bookid}`\n            } else {\n\n                let src = \"\"\n                for (page = 1;; page++) {\n                    let sr = java.ajax(`${ul}/user/bookshelf?page=${page}`);\n                    if (!/书架空空如也/.test(sr)) {\n                        src += sr + \"\\n\";\n                    } else {\n                        break;\n                    }\n                }\n                //java.log(\"书籍在书架第\"+page+\"页\");\n                let booklist = src.match(/\\/novel\\/\\d+\\.html/g);\n                let dfid = src.match(/\\/user\\/bookshelf\\/del[^\"]+/g);\n                for (i in booklist) {\n                    if (booklist[i].includes(bookid)) {\n                        ra = dfid[i];\n                        break;\n                    }\n                }\n                url = GetUL() + ra;\n            }\n            let msg = java.get(url, {\n                \"x-requested-with\": \"XMLHttpRequest\"\n            });\n            let point = JSON.parse(msg.body()).msg\n            java.toast(point);\n        } catch (error) {\n            //java.log(error);\n            java.toast('无效操作');\n        }\n    } else if (!String(info)) {\n        java.toast(\"\\n未填入书籍id，请进书籍详情页，或者手动填写。\");\n    } else if (!source.getLoginHeaderMap()) {\n        java.toast(\"未登录，请登录后使用\");\n    }\n}\n\nfunction BookShelf() {\n    if (source.getLoginHeaderMap()) {\n        java.startBrowser(`${ul}/user/bookshelf/`, \"书架\");\n    } else {\n        java.toast(\"未登录，请登录后再使用此功能。\");\n    }\n}\n\nfunction inBookShelf() {\n    htm = booklist();\n    java.startBrowser(\"data:text/html;base64,\" + htm, \"书架\");\n}\n//放置书籍信息至书源变量\nfunction bookinto() {\n    if (String(sg)) {\n        let sgv1 = sgv.booklist;\n        let sg1 = JSON.parse(sg);\n        let exists = sgv1.some(item => {\n            return Number(item.ID) === Number(sg1.ID);\n        });\n        if (!exists) {\n            sgv1.push(sg1);\n            source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n            java.toast(\"添加成功\");\n        } else {\n            java.toast(\"书籍已存入本地书架中\");\n        }\n    } else {\n        java.toast('🚫请进入书籍详情页后操作，或者刷新试试')\n    }\n}\n\nfunction bookmove(a) {\n    try {\n        let sgv1 = sgv.booklist;\n        let sg1 = JSON.parse(sg);\n        if (a == \"all\") {\n            source.put(\"list\", '')\n            sgv1.length = 0\n            source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n            java.toast('已清空本地书架');\n        } else {\n            let index = sgv1.findIndex(item => Number(item.ID) === Number(sg1.ID));\n            if (index != -1) {\n                sgv1.splice(index, 1);\n                source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n                java.toast(`已从本地删除该书籍。\\n书籍ID：${sg1.ID}`);\n            } else {\n                java.toast('书籍不在本地书架中')\n            }\n        }\n    } catch (err) {\n        java.log(\"错误日志\" + err);\n        java.toast('🚫请进入书籍详情页后操作，或者刷新试试');\n    }\n}",
    "respondTime": 190259,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "canReName": "1",
      "coverUrl": "@get:{i}\n@js: /^https?/.test(result) ? result : GetUL() + result;",
      "init": "<js>\nvar bookid = baseUrl.match(/novel\\/(\\d+)/)[1];\n\n//书评发送\nconst bookva = book.getVariable(\"custom\");\n\nif (bookva != false && bookva !== \"\" && source.getLoginHeader()) {\n    const commenturl = `${GetUL()}/home/comment/add.html`;\n    let body = `content=${bookva}&type=novel&mid=${bookid}`\n  try {\n    let code = String(java.getVerificationCode(`data:image/svg+xml;base64,${codesvg}`));\n    if (code == \"评论\" || /^@\\d+$/.test(code)) {\n//java.log(code);\nif (/^@\\d+$/.test(code)) {\n\t   let contid = code.match(/(\\d+)/)[1];\n    body += `&pid=${contid}`\n}\n//java.log(body);\n    let headers = {\n        \"x-requested-with\": \"XMLHttpRequest\"\n    }\n    let ok = java.post(commenturl, body, headers).body();\n    java.toast(JSON.parse(ok).msg);\n    book.putCustomVariable(\"\");\n     } else {\n     \tPackages.java.lang.Thread.sleep(40);\n     \tjava.toast('请按图片要求填写');\n     \tbook.putCustomVariable(\"\");\n     \t}\n    } catch(err) {\n    \tjava.log(err);\n    \tbook.putCustomVariable(\"\");\n    \t}\n  } else if(bookva != false && bookva !== \"\" && !source.getLoginHeader()) {\n\tjava.toast(\"未登录，请登录后操作\");\n\tbook.putCustomVariable(\"\");\n}\n\ntry{\nsourceinfo = source.getLoginInfoMap();\nsourceinfo['书籍ID'] = bookid;\nif (bookid) {\n\tsource.putLoginInfo(JSON.stringify(sourceinfo));\n\t}\n$ = _ => java.getString(_);\nimg = /^https?/.test($('[property$=image]@content')) ? $('[property$=image]@content') : GetUL() + $('[property$=image]@content');\nlist = {\n\t               \"ID\": bookid,\n                \"img\": img,\n                \"name\": $('[property$=book_name]@content'),\n                \"author\": $('[property$=author]@content'),\n                \"info\": $('[property$=description]@content'),\n                \"url\": \"legado://import/addToBookshelf?src=\" + baseUrl\n            }\nsource.put(\"list\",JSON.stringify(list));\n} catch(err) {\n\tjava.log(\"登录UI未初始化保存数据：\"+err);\n\t}\nsrc;\n</js>\n@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"class.fix@p.2:3@text##.*[：:]\",\nk:\"class.tg@span@text##\\n##,\",\ni:\"[property$=image]@content\",\nl:\"[property$=latest_chapter_name]@content\",\nm:\"text.查看全部章节@href\",\nz:\"class.fix@p.4@text##.*[：:]\",\no:\"[property$=description]@content\"}",
      "intro": "&nbsp;&nbsp;📖书籍ID：{{baseUrl.match(/novel\\/(\\d+)/)[1]}}\n☑当前站源：{{GetUL()}}\n🏷️标签：@get:{k}\n📜简介：@get:{o}\n🔻评论区：\n❗️右上角书籍变量填入评论后刷新详情页发送评论。❗️\n<js>\nconst Bookid = baseUrl.match(/novel\\/(\\d+)/)[1];\nconst contul = `${GetUL()}/index.php?s=/Home/comment/lists/id/${Bookid}/type/novel/limit/5/size/12`\nvar src = java.ajax(contul);\njava.setContent(src);\nvar list = java.getElement('//script[@src=\"/public/static/jquery/jquery.min.js\"]/following-sibling::script[1]');\n\nvar lists = JSON.parse(String(list[0]).match(/var\\s*trre=([\\s\\S]+),page_num/)[1]);\n//java.log(JSON.stringify(lists,null,\"\\t\"));\n\nif (lists.length > 0) {\n\tvar cont = \"\";\nif (source.getLoginHeader()) {\n        let jc = source.getLoginHeaderMap();\n        let inf = decodeURIComponent(jc.get(\"Cookie\"));\n        let info = decodeURIComponent(inf).match(/\\{[\\s\\S]+\\}/)[0];\n        let myuid = JSON.parse(info)['uid'];\n\n\n//处理我的评论数据\nvar myComments = [];\nfunction collectMyComments(comment, parentPath) {\n    let floor = parentPath ? `${parentPath}-${comment.floorIndex}` : comment.floorIndex;\n    if (comment.uid === Number(myuid)) {\n        myComments.push({\n        \t   id : comment.id ,\n        \t   username: comment.user.username ,\n        \t   group: comment.user.group,\n            floor: `【${floor}楼】`,\n            time: timeov(comment.create_time * 1000),\n            content: comment.content\n        });\n    }\n    if (comment._?.forEach) {\n        comment._.forEach((child, index) => {\n            child.floorIndex = index + 1;\n            collectMyComments(child, floor);\n        });\n    }\n}\nlists.forEach((c, i) => {\n    c.floorIndex = i + 1;\n    collectMyComments(c, \"\");\n});\n//java.log(JSON.stringify(myComments));\nvar mySection = \"=== 我的评论（共找到\" + myComments.length + \"条） ===\\n\\n\";\nmyComments.forEach(m => {\n    mySection += `┌【ID：${m.id}】| 👤${m.username} | ${m.group} | ${m.time}\\n└评论：${m.content}\\n${m.floor}\\n `;\n});\n    } else {\n    \tmySection = \"\";\n}\n\n//处理全部评论数据\nfunction buildComments(comment, parentPath, level) {\n    let floor = parentPath ? `${parentPath}-${comment.floorIndex}` : comment.floorIndex;\n    let indent = '  '.repeat(level);\n    let str = `${indent}┌【ID：${comment.id}】|👤${comment.user.username} | ${comment.user.group} | ${timeov(comment.create_time * 1000)}\\n` +\n              `${indent}└评论：${comment.content}\\n` +\n              `${indent}【${floor}楼】\\n\\n`;\n    \n    if (comment._?.forEach) {\n        comment._.forEach((child, index) => {\n            child.floorIndex = index + 1;\n            str += buildComments(child, floor, level + 1);\n        });\n    }\n    return str;\n}\n\nvar allSection = \"=== 全部评论（共\" + lists.length + \"条） ===\\n\\n\";\nlists.forEach((c, i) => {\n    c.floorIndex = i + 1;\n    allSection += buildComments(c, \"\", 0);\n});\n\n//合并评论数据\ncont = mySection + \"\\n\" + allSection;\n\n} else {\n\tcont = \"本书暂时没有评论喔\";\n}\nresult = result + \"\\n\" + cont;\nresult;\n</js>",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}\n@js: GetUL() + result;",
      "wordCount": "@get:{z}"
    },
    "ruleContent": {
      "content": "<js>\nvar url = GetUL();\n//处理强制登录\nvar nn = String(cookie.getCookie(url));\nvar coks = nn.split('; '); \nvar ckk = coks.filter(item => !item \n.startsWith(\"lf_reader_num\")).join('; ');\ncookie.setCookie(url,ckk);\n\nvar chapterul = java.hexDecodeToString(src);\n\njava.log(\"当前阅读进度\"+book.durChapterIndex+\"|已下载进度\"+chapter.index);\n\n\n//自动处理验证\nfunction content() {\n    let text;\n    let html = java.ajax(chapterul);\n    if (html.includes(\"滑动验证\")) {\n        let headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\",\n            \"Referer\": chapterul\n        };\n        try {\n            let s = html.match(/src=\\\"(\\/huadong[^\"]+)/)[1];\n            let sr = java.get(url + s, headers).body()\n            eval(sr.match(/(key=\\\".+?,value=\\\"[^;]+?\\;)/)[1]);\n            let va = getval(value);\n            let codeul = url + sr.match(/([^\"]+yanzheng_huadong\\.php[^\"]+)/)[1] + `${key}&value=${va}`;\n            let ck = java.get(codeul, headers);\n            java.log(\"验证Cookie：\" + JSON.stringify(ck.cookies()));\n            java.toast(\"检测到验证,尝试自动处理……\");\n            let tx = java.ajax(chapterul);\n            text = java.getString('#chapterContent@html', tx);\n        } catch(error) {\n            java.log(error);\n            text = \"自动验证失败，请重试!\";\n        }\n    } else {\n        text = java.getString('#chapterContent@html', html);\n    }\n    return text;\n}\n\nlet text;\nif ( Math.abs(chapter.index - book.durChapterIndex) <= 3) {\n   \n    text = content();\n    \n} else {\n\t\n\ttext = \"因网站速率限制，当前预下载超过三章，为避免被封ip，被动停止解析正文。\\n建议调小预下载，保持正常阅读速度，刷新即可重新获取\";\n\t\n}\n\n//处理重新获取文本时可能会出现的错误。\nlet retryCount = 0;\nconst maxRetries = 3;\nlet result;\nwhile (retryCount < maxRetries) {\n    if (text != false && text !== \"\") {\n        result = text;\n        break;\n    } else {\n    \t    retryCount++;\n        java.toast(`未获取到文本，正在重试...（当前第${retryCount}次重试）`);\n        text = content();\n    }\n}\n\nif (retryCount === maxRetries) {\n    result = \"重试三次仍未获取到文本，请检查网络状况。\"\n}\nresult;\n</js>",
      "nextContentUrl": "",
      "replaceRegex": "##{{chapter.title}}"
    },
    "ruleExplore": {
      "author": "span.-1@text",
      "bookList": "class.txt-list@li||#list > li",
      "bookUrl": "a.0@href\n@js: GetUL() + result;",
      "coverUrl": "img@src\n@js: /^https?/.test(result) ? result : GetUL() + result;",
      "kind": "span.0@a@span@text||.rightBlock_name@text##\\[|\\]",
      "lastChapter": "[class=spanLi]@text",
      "name": "span.0@a@textNodes||.rightBlock_title@text"
    },
    "ruleSearch": {
      "author": ".s4@text",
      "bookList": "class.txt-list@li!0",
      "bookUrl": "a@href\n@js: GetUL() + result;",
      "checkKeyWord": "我的美母",
      "coverUrl": "",
      "intro": "",
      "kind": ".s1@text##\\[|\\]",
      "lastChapter": "",
      "name": ".s2@text",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": "class.section-list@a",
      "chapterName": "text",
      "chapterUrl": "href\n<js>\nvar url = GetUL() + result;\nresult = `data:;base64,${java.base64Encode(url)},{\"type\":\"yzc\"}`;\nresult;\n</js>",
      "preUpdateJs": "eval(String(source.loginUrl));\nsourceUL = GetUL();\nif (!String(book.bookUrl).includes(sourceUL)) {\n  book.bookUrl = String(book.bookUrl).replace(/https?:\\/\\/[^\\/]+/,sourceUL);\n  book.tocUrl = String(book.tocUrl).replace(/https?:\\/\\/[^\\/]+/,sourceUL);\n//切换接口后重新设置登录Cookie（如果已登录）\nlet Cookie = cookie.getCookie(GetUL());\nif (!/lf_user_auth/.test(Cookie) && source.getLoginHeader()) {\n\tlet ck = source.getLoginHeaderMap()['Cookie']\n\tcookie.setCookie(GetUL(),ck);\n}\n  java.toast(\"\\n检测到切换源站，已更新目录链接。\");\n   java.refreshBook();\n}",
      "updateTime": "href##^##{{GetUL()}}"
    },
    "searchUrl": "{{eval(String(source.loginUrl));GetUL();}}/search.html?keyword={{key}}&page={{page}}",
    "variableComment": "ICAgICAgICAg5rqQ5L2c6ICF77yaICDlpJzms73lt50gICAgICAgICAgCiAgICAgIOKVkOKVkOKVkOKVkOKVpOKVkOKVkOKVkOKVkOKVkArilI7ilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilJIKICDmm7TmlrDml6Xlv5co6L+R5pyfKQogIOWkhOeQhuWIh+aNouaOpeWPo+eZu+W9leeKtuaAgeS4ouWksSAgLSAyMDI1LjMuOAogIOmHjeaehOS5pua6kO+8jOWinuWKoOaOpeWPo+mAieaLqSAtMjAyNS4zLjcKICDmnKzlnLDkuabmnrbmlLnkuLrph4fnlKjliqDlhaXkuabmnrbml7bpl7Tpobrluo/mjpLluo/jgIIgLSAyMDI1LjMuNgogIOS8mOWMluS5puivhO+8jOKAnOaIkeeahOS5puivhOKAneaUueeUqHVpZOeyvuWHhuWMuemFjSAtIDIwMjUuMy41CiAg5LyY5YyW5q2j5paH77yM6ZmQ5Yi26aKE5LiL6L2944CCIC0gMjAyNS4zLjIKICDkvJjljJblj5HnjrAgLSAyMDI1LjMuMQogIOS8mOWMluS5puivhOWxleekuu+8jOaUr+aMgeivhOiuuuS5puexjeWPiuWbnuWkjealvOWxguOAgiAtMjAyNS4yLjI4CiAg5Lmm6K+E5bGV56S65LiO5Y+R6YCBIC0gMjAyNS4yLjI2CiAg5q2j5paH6Ieq5Yqo6YeN6K+VLSAyMDI1LjIuMjMK4pSW4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSF4pSa",
    "weight": 0
  }
]