[
  {
    "bookSourceComment": "//2025.2.16 优化发现 ◎夜泽川◎\n//2025.2.13 新增书源更新检测，根据书源编辑时间戳判断，修改源会导致判断错误。◎夜泽川◎\n//2025.2.12 新增网络书架处理（仅登录用户）,动态获取发现。◎夜泽川◎\n（正文经三天测试观察，未收到任何问题反馈）😗\n//2025.2.9 自动处理正文验证。◎夜泽川◎\n//2025.1.26 修复登录函数中与阅读内置变量冲突。◎夜泽川◎\n//2025.1.24 优化登录规则 ◎夜泽川◎\n//2024.7.26 ◎夜泽川◎\n//搜索和发现需要封面可复制规则到相应位置，因为封面是从详情取的，所以可能会导致加载变慢甚至超时，自行斟酌。↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\na@href\n<js>\nul = source.key + result;\njava.ajax(ul);\n</js>\n[property$=image]@content",
    "bookSourceGroup": "零,自制",
    "bookSourceName": "爱丽丝书屋",
    "bookSourceType": 0,
    "bookSourceUrl": "https://alicesw.org",
    "bookUrlPattern": "https?://alicesw.org/novel/\\d+.html",
    "customOrder": 192,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = []\n       var push = (title, url, size) =>\n       result.push({\n       title: title,\n       url: url,\n       style: {\n       layout_flexGrow: 1,\n       layout_flexBasisPercent: size\n      }\n   });\nvar tagh = java.ajax(\"https://alicesw.org/all/order/hits+desc.html\");\nvar tag = org.jsoup.Jsoup.parse(tagh).select('.fenlei a');\ntag.forEach(ta => {\n\t  nam = ta.text()\n    ul = String(ta.attr('href')).replace(/$/,\"?page={{page}}\");\npush(nam,ul,0.25);\n})\npush(\"最近更新\",\"/all/order/update_time+desc.html?page={{page}}\",1);\npush(\"分类\",null,1);\nif (source.getLoginHeader()) {\n info = source.getLoginHeaderMap().get(\"Cookie\");\n username = info.match(/22username%22%3A%22(.*?)%22%7D/)[1];\npush(\"阅读记录\",\"/user/recentread/index.html\",0.45);\npush(\"书架\",\"/user/bookshelf/index.html\",0.45);\npush(`用户◎${username}◎中心`,null,1);\n} else {\n\tpush(\"未登录\",null,1);\n}\nresult.reverse();\nJSON.stringify(result);",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "jsLib": "nk = \"PGh0bWw+CjxoZWFkPgogICAgPG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iMDt1cmw9bGVnYWRvOi8vaW1wb3J0L1NvdXJjZT9zcmM9aHR0cHM6Ly9mYXN0bHkuanNkZWxpdnIubmV0L2doL3llemVjaHVhbmRsL3NvdXJjZS1sZWdhZG9AbWFpbi9zb3VyY2Uv54ix5Li95Lid5Lmm5bGLLmpzb24iPgogICAgPHN0eWxlPgogICAgICAgIC5ub3RpY2UtYm94IHsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsgLyog5ZCv55SoRmxleGJveOW4g+WxgCAqLwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJub3RpY2UtYm94Ij4KICAgICAgICA8cD7oi6Xot7PovazmnKroh6rliqjmiafooYw8YnI+CiAgICAgICAgPGEgaHJlZj0ibGVnYWRvOi8vaW1wb3J0L1NvdXJjZT9zcmM9aHR0cHM6Ly9mYXN0bHkuanNkZWxpdnIubmV0L2doL3llemVjaHVhbmRsL3NvdXJjZS1sZWdhZG9AbWFpbi9zb3VyY2Uv54ix5Li95Lid5Lmm5bGLLmpzb24iPuivt+aJi+WKqOeCueWHu+atpOWkhDwvYT48L3A+CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+\"\n\n//计算最终value值\nfunction getval(kk) {\n\t   const { java } = this\n    var val = \"\";\n    for (var i = 0; i <= kk.length - 1; i++) {\n        var str = kk.charAt(i);\n        var code = str.charCodeAt();\n        val += parseInt(code) + 1;\n    }\n    valu = java.md5Encode(val);\n    return valu;\n}\n\nfunction timeov(times) {\n    const date = new Date(times);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const seconds = String(date.getSeconds()).padStart(2, '0');\n    \n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}",
    "lastUpdateTime": 1739671245051,
    "loginUi": "[   \n    {\n        \"name\": \"🏮更新书源🏮\",\n        \"type\": \"button\",\n        \"action\": \"update()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"用户名/邮箱\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"密码\",\n        \"type\": \"password\"\n    },\n    {\n        \"name\": \"注册\",\n        \"type\": \"button\",\n        \"action\": \"reg()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"登录\",\n        \"type\": \"button\",\n        \"action\": \"Login()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"登出\",\n        \"type\": \"button\",\n        \"action\": \"out()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"◀◎展示登录信息◎▶\",\n        \"type\": \"button\",\n        \"action\": \"show()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"书籍ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"◎添加网络书架◎\",\n        \"type\": \"button\",\n        \"action\": \"AFBook(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"◎移除网络书架◎\",\n        \"type\": \"button\",\n        \"action\": \"AFBook(0)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"打开书架\",\n        \"type\": \"button\",\n        \"action\": \"BookShelf()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    }\n]",
    "loginUrl": "var ul = source.key;\nfunction reg() {\njava.startBrowser(\"https://alicesw.org/user/user/reg.html\",\"注册账号\");\n\t}\nfunction login() {}\nfunction Login() {\n\tcookie.removeCookie(ul);\n\tvar loginul = \"https://alicesw.org/user/user/login.html\"\n\tvar codeul = \"https://alicesw.org/user/user/verify.html\"\n\t \n\tvar na = result['用户名/邮箱'];\n\tvar pa = result['密码']\n\tif (String(na&&pa)) {\n\tlet phpid = java.get(codeul,{}).header(\"set-cookies\");\n\tjava.log(phpid);\n\tlet code = java.getVerificationCode(codeul);\n\tlet body = `username=${na}&password=${pa}&code=${code}`\n let cook = java.post(loginul,body,{\"x-requested-with\":\"XMLHttpRequest\",\"Cookie\": phpid });\nlet ck = String(cook.cookies()).replace(/[{}]/g,\"\").replace(\",\",\"; \");\n\tjava.log(String(ck))\n\tlet headers = JSON.stringify({\n\t\t       \"Cookie\": ck\n\t\t    });\n\tlet \tusercode = JSON.parse(cook.body()).msg\n\t\tjava.toast(usercode);\n\t\tif (ck) {\nsource.putLoginHeader(headers);\ncookie.replaceCookie(ul,ck);\n} else {\n\tsource.removeLoginHeader();\n\tcookie.removeCookie(ul)\n\t    }\n   }\n}\nfunction out() {\n  source.removeLoginHeader();\n  cookie.removeCookie(ul);\njava.toast(\"已退出登录状态\");\n}\nfunction show() {\n\tlet jc = source.getLoginHeaderMap();\n\tlet us,id,codes\n\tif (jc) {\n\t let info = jc.get(\"Cookie\").match(/%22%3A%22(\\d+?)%22%2C%22username%22%3A%22(.*?)%22%7D/)\n\t us = info[2];\n\t id = info[1];\n\t codes = \"✔️已登录\";\n\t} else {\n\t us = \"无\";\n\t id = \"无\";\n\t codes = \"❌未登录\";\n}\nlet txt = `\\n◎用户：${us}◎\\n◎用户ID：${id}◎\\n◎登录状态：${codes}◎`\n\tjava.longToast(txt);\n}\nfunction update() {\n\tsourcetime = String(source.lastUpdateTime);\nlet \tupul = \"https://fastly.jsdelivr.net/gh/yezechuandl/source-legado@main/source/爱丽丝书屋.json\"\n  let cc = java.ajax(upul)\n  let uptime = String(JSON.parse(cc)[0].lastUpdateTime)\nif (Number(uptime) > Number(sourcetime)) {\n    java.toast(\"检测到更新\");\n    Packages.java.lang.Thread.sleep(2000)\n    java.startBrowser('data:text/html;base64,'+nk,'更新');\n} else {\n        java.toast(`本地书源版本较新，无需更新。\\n本地书源编辑时间：${timeov(Number(sourcetime))}\\n网络书源更新时间：${timeov(Number(uptime))}`);\n    }\n}\nfunction AFBook(ta) {\n\tlet info = result['书籍ID']\n\tif (String(info)) {\n\tlet bookid = info\n java.log(bookid);\n try {\n let ul\n if (ta) {\n  ul = `https://alicesw.org/user/bookshelf/add?novel_id=${bookid}`   \n           } else {\n           \tlet src = java.ajax(\"https://alicesw.org/user/bookshelf/\")\nlet booklist = src.match(/\\/novel\\/\\d+\\.html/g);\nlet dfid = src.match(/\\/user\\/bookshelf\\/del[^\"]+/g);\nfor (i in booklist) {\n\tif (booklist[i].includes(bookid)) {\n\t             \tra = dfid[i];\n\t             \tbreak;\n             \t}\n         }\n    ul = source.key + ra;\n}\n  let msg = java.get(ul,{\"x-requested-with\":\"XMLHttpRequest\"});\n  let point = JSON.parse(msg.body()).msg\n    java.toast(point);\n    } catch(error) {\n  \tjava.toast('无效操作');\n  \t}\n  } else {\n   \tjava.toast(\"\\n未填入书籍id，请进书籍详情页，或者手动填写。\");\n   \t}\n}\nfunction BookShelf() {\n\tif(source.getLoginHeaderMap()) {\n\t\tjava.startBrowser(\"https://alicesw.org/user/bookshelf/\",\"书架\");\n\t\t} else {\n\t\t\tjava.toast(\"未登录，请登录后再使用此功能。\");\n\t\t\t}\n\t}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "<js>\nbookid = baseUrl.match(/(\\d+)/)[1];\nsourceinfo = source.getLoginInfoMap()\nsourceinfo['书籍ID'] = bookid;\nif (bookid) {\n\tsource.putLoginInfo(JSON.stringify(sourceinfo));\n\t}\nsrc;\n</js>\n@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"class.fix@p.2:3:4@text##.*[：:]\",\nk:\"class.tg@span@text##\\n##,\",\ni:\"[property$=image]@content\",\nl:\"[property$=latest_chapter_name]@content\",\nm:\"text.查看全部章节@href\",\no:\"[property$=description]@content\"}",
      "intro": "&nbsp;&nbsp;📖书籍ID：{{baseUrl.match(/(\\d+)/)[1]}}\n标签🏷️：@get:{k}\n📜简介：@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}"
    },
    "ruleContent": {
      "content": "<js>\nvar url = source.key\n//处理强制登录\nvar nn = String(cookie.getCookie(url));\nvar coks = nn.split('; '); \nckk = coks.filter(item => !item \n.startsWith(\"lf_reader_num\")).join('; ');\ncookie.setCookie(url,ckk);\n\n//自动处理验证\nlet text;\nif (src.includes(\"滑动验证\")) {\n   let headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\",\n        \"Referer\": baseUrl\n    };\n    try {\n        let s = src.match(/src=\\\"(\\/huadong[^\"]+)/)[1];\n        let sr = java.get(url + s, headers).body()\n        eval(sr.match(/(key=\\\".+?value=\\\"[^;]+?\\;)/)[1]);\n        let va = getval(value);\n        let codeul = url + sr.match(/([^\"]+yanzheng_huadong\\.php[^\"]+)/)[1] + `${key}&value=${va}`;\n        let ck = java.get(codeul,headers);\n        java.log(\"验证Cookie：\" + JSON.stringify(ck.cookies()));\n        java.toast(\"检测到验证,尝试自动处理……\");\n        let tx = java.ajax(baseUrl);\n        text = java.getString('#chapterContent@html', tx);\n    } catch (error) {\n    \t   java.log(error);\n        text = \"自动验证失败，请重试!\";\n   }\n } else {\n    text = java.getString('#chapterContent@html', src);\n}\ntext;\n</js>",
      "replaceRegex": "##{{chapter.title}}"
    },
    "ruleExplore": {
      "author": "span.-1@text",
      "bookList": "class.txt-list@li||#list > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "kind": "span.0@a@span@text##\\[|\\]||.rightBlock_name@text",
      "lastChapter": ".spanLi@text",
      "name": "span.0@a@textNodes||.rightBlock_title@text"
    },
    "ruleSearch": {
      "author": ".s4@text",
      "bookList": "class.txt-list@li!0",
      "bookUrl": "a@href",
      "coverUrl": "",
      "intro": "",
      "kind": ".s1@text##\\[|\\]",
      "lastChapter": "",
      "name": ".s2@text",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": "class.section-list@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/search.html?keyword={{key}}&page={{page}}",
    "variableComment": "",
    "weight": 0
  }
]
