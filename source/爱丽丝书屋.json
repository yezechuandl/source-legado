[
  {
    "bookSourceComment": "//2025.2.26 新增书评展示。（其实也没多少评论） ◎夜泽川◎\n//2025.2.23 处理正文文本获取时可能出现的错误。（三次试错）◎夜泽川◎\n//2025.2.22 加入本地书架功能（与阅读书架隔离），网络书架的替代品（因为经验值），未注册用户也可使用。\n（实验性功能，不建议加入过多，可能会出现未知问题，用之前记得备份好🧐）\n//2025.2.17 处理网络书架翻页的相关问题 ◎夜泽川◎\n//2025.2.16 优化发现 ◎夜泽川◎\n//2025.2.13 新增书源更新检测，根据书源编辑时间戳判断，修改源会导致判断错误。◎夜泽川◎\n//2025.2.12 新增网络书架处理（仅登录用户）,动态获取发现。◎夜泽川◎\n//2025.2.9 自动处理正文验证。◎夜泽川◎\n//2025.1.26 修复登录函数中与阅读内置变量冲突。◎夜泽川◎\n//2025.1.24 优化登录规则 ◎夜泽川◎//2024.7.26 ◎夜泽川◎\n//搜索和发现需要封面可复制规则到相应位置，因为封面是从详情取的，所以可能会导致加载变慢甚至超时，自行斟酌。↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\na@href\n<js>\nul = source.key + result;\njava.ajax(ul);\n</js>\n[property$=image]@content",
    "bookSourceGroup": "零",
    "bookSourceName": "爱丽丝书屋",
    "bookSourceType": 0,
    "bookSourceUrl": "https://alicesw.org",
    "bookUrlPattern": "https?://alicesw.org/novel/\\d+.html",
    "customOrder": 189,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = []\n       var push = (title, url, size) =>\n       result.push({\n       title: title,\n       url: url,\n       style: {\n       layout_flexGrow: 1,\n       layout_flexBasisPercent: size\n      }\n   });\nvar tagh = java.ajax(\"https://alicesw.org/all/order/hits+desc.html\");\nvar tag = org.jsoup.Jsoup.parse(tagh).select('.fenlei a');\ntag.forEach(ta => {\n\t  nam = ta.text()\n    ul = String(ta.attr('href')).replace(/$/,\"?page={{page}}\");\npush(nam,ul,0.25);\n})\npush(\"最近更新\",\"/all/order/update_time+desc.html?page={{page}}\",1);\npush(\"分类\",null,1);\nif (source.getLoginHeader()) {\n info = source.getLoginHeaderMap().get(\"Cookie\");\n username = info.match(/22username%22%3A%22(.*?)%22%7D/)[1];\npush(\"阅读记录\",\"/user/recentread/index.html\",0.45);\npush(\"书架\",\"https://alicesw.org/user/bookshelf?page={{page}}\",0.45);\npush(`用户◎${username}◎中心`,null,1);\n} else {\n\tpush(\"未登录\",null,1);\n}\nresult.reverse();\nJSON.stringify(result);",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "jsLib": "nk = \"PGh0bWw+CjxoZWFkPgogICAgPG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iMDt1cmw9bGVnYWRvOi8vaW1wb3J0L1NvdXJjZT9zcmM9aHR0cHM6Ly9mYXN0bHkuanNkZWxpdnIubmV0L2doL3llemVjaHVhbmRsL3NvdXJjZS1sZWdhZG9AbWFpbi9zb3VyY2Uv54ix5Li95Lid5Lmm5bGLLmpzb24iPgogICAgPHN0eWxlPgogICAgICAgIC5ub3RpY2UtYm94IHsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsgLyog5ZCv55SoRmxleGJveOW4g+WxgCAqLwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJub3RpY2UtYm94Ij4KICAgICAgICA8cD7oi6Xot7PovazmnKroh6rliqjmiafooYw8YnI+CiAgICAgICAgPGEgaHJlZj0ibGVnYWRvOi8vaW1wb3J0L1NvdXJjZT9zcmM9aHR0cHM6Ly9mYXN0bHkuanNkZWxpdnIubmV0L2doL3llemVjaHVhbmRsL3NvdXJjZS1sZWdhZG9AbWFpbi9zb3VyY2Uv54ix5Li95Lid5Lmm5bGLLmpzb24iPuivt+aJi+WKqOeCueWHu+atpOWkhDwvYT48L3A+CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+\"\n\n//计算最终value值\nfunction getval(kk) {\n\t   const { java } = this\n    var val = \"\";\n    for (var i = 0; i <= kk.length - 1; i++) {\n        var str = kk.charAt(i);\n        var code = str.charCodeAt();\n        val += parseInt(code) + 1;\n    }\n    valu = java.md5Encode(val);\n    return valu;\n}\n\nfunction timeov(times) {\n    const date = new Date(times);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const seconds = String(date.getSeconds()).padStart(2, '0');\n    \n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\n//自定义书架\nfunction booklist() {\n\tconst { java , source } = this\n let all = source.getVariable();\n let list = String(all);\n let hm = \"PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9emgtQ04+CjxoZWFkPgo8bWV0YSBjaGFyc2V0PVVURi04Pgo8bWV0YSBuYW1lPXZpZXdwb3J0IGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPgo8dGl0bGU+5pys5Zyw5Lmm5p62PC90aXRsZT4KPHN0eWxlPmJvZHl7bWFyZ2luOjA7cGFkZGluZzoyMHB4O2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sc3lzdGVtLXVpLCJTZWdvZSBVSSIsUm9ib3RvLHNhbnMtc2VyaWY7YmFja2dyb3VuZDojZjVmNWY3fS5zaGVsZi1jb250YWluZXJ7bWF4LXdpZHRoOjEyMDBweDttYXJnaW46MCBhdXRvO2JhY2tncm91bmQ6d2hpdGU7Ym9yZGVyLXJhZGl1czoxOHB4O2JveC1zaGFkb3c6MCA0cHggMTJweCByZ2JhKDAsMCwwLDAuMSk7cGFkZGluZzozMHB4fS5zaGVsZi10aXRsZXt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6Mi41cmVtO2NvbG9yOiMxZDFkMWY7bWFyZ2luOjAgMCAzMHB4IDA7cGFkZGluZy1ib3R0b206MjBweDtib3JkZXItYm90dG9tOjJweCBzb2xpZCAjZjBmMGYwfS5ncmlke2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KGF1dG8tZmlsbCxtaW5tYXgoMjUwcHgsMWZyKSk7Z2FwOjI1cHg7cGFkZGluZzoxNXB4IDB9LmJvb2staXRlbXtiYWNrZ3JvdW5kOiNmZmY7Ym9yZGVyLXJhZGl1czoxMnB4O3BhZGRpbmc6MThweDtib3gtc2hhZG93OjAgMnB4IDhweCByZ2JhKDAsMCwwLDAuMDgpO3RyYW5zaXRpb246dHJhbnNmb3JtIC4ycyxib3gtc2hhZG93IC4ycztkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1ufS5ib29rLWl0ZW06aG92ZXJ7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTNweCk7Ym94LXNoYWRvdzowIDRweCAxNnB4IHJnYmEoMCwwLDAsMC4xMil9LmNvdmVyLWNvbnRhaW5lcnt3aWR0aDoxMDAlO2FzcGVjdC1yYXRpbzozLzQ7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLWJvdHRvbToxNXB4fS5jb3Zlci1pbWd7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvYmplY3QtZml0OmNvbnRhaW47Ym9yZGVyLXJhZGl1czo4cHh9LmJvb2stbmFtZXtmb250LXNpemU6MS4xZW07bWFyZ2luOjAgMCA4cHggMDtjb2xvcjojMWQxZDFmO2ZvbnQtd2VpZ2h0OjYwMH0uYm9vay1hdXRob3J7Zm9udC1zaXplOi45ZW07Y29sb3I6IzY2NjttYXJnaW4tYm90dG9tOjEycHh9LmJvb2staW5mb3tmb250LXNpemU6LjllbTtjb2xvcjojODY4NjhiO2xpbmUtaGVpZ2h0OjEuNTtoZWlnaHQ6NC41ZW07b3ZlcmZsb3c6aGlkZGVuO2Rpc3BsYXk6LXdlYmtpdC1ib3g7LXdlYmtpdC1saW5lLWNsYW1wOjM7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsO2ZsZXgtZ3JvdzoxfTwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CjxkaXYgY2xhc3M9c2hlbGYtY29udGFpbmVyPgo8aDEgY2xhc3M9c2hlbGYtdGl0bGU+5pys5Zyw5Lmm5p62PC9oMT4KPGRpdiBpZD1ib29rc2hlbGY+PC9kaXY+CjwvZGl2Pgo8c2NyaXB0PuKXjuWPguiAg+agh+ivhuKXjgpmdW5jdGlvbiByZW5kZXJCb29rc2hlbGYoKXtjb25zdCBjb250YWluZXI9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Jvb2tzaGVsZicpO2xldCBodG1sPScnO2lmKGxpc3QubGVuZ3RoPT09MCl7aHRtbD0nPGRpdiBjbGFzcz0iZW1wdHktbWVzc2FnZSI+5pqC5pe25rKh5pyJ5Lmm57GN77yM5b+r5Y675re75Yqg5ZCn77yBPC9kaXY+Jzt9ZWxzZXtodG1sPSc8ZGl2IGNsYXNzPSJncmlkIj4nO2xpc3QuZm9yRWFjaChib29rPT57aHRtbCs9YDxkaXYgY2xhc3M9ImJvb2staXRlbSI+PGRpdiBjbGFzcz0iY292ZXItY29udGFpbmVyIj48aW1nIHNyYz0iJHtib29rLmltZ30iYWx0PSIke2Jvb2submFtZX0iY2xhc3M9ImNvdmVyLWltZyI+PC9kaXY+PGgzIGNsYXNzPSJib29rLW5hbWUiPiR7Ym9vay5uYW1lfTwvaDM+PGRpdiBjbGFzcz0iYm9vay1hdXRob3IiPiR7Ym9vay5hdXRob3J9PC9kaXY+PHAgY2xhc3M9ImJvb2staW5mbyI+JHtib29rLmluZm99PC9wPjxhIGhyZWY9IiR7Ym9vay51cmx9ImNsYXNzPSJib29rLWxpbmsiPueri+WNs+mYheivuzwvYT48L2Rpdj5gO30pO2h0bWwrPSc8L2Rpdj4nO30KY29udGFpbmVyLmlubmVySFRNTD1odG1sO30Kd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLHJlbmRlckJvb2tzaGVsZik7PC9zY3JpcHQ+CjwvYm9keT4KPC9odG1sPg==\"\n let cc = java.base64Decode(hm);\n let html = String(cc).replace(/◎参考标识◎/,`list = ${list}`);\n //java.log(html);\nreturn java.base64Encode(html);;\n}",
    "lastUpdateTime": 1740587255108,
    "loginUi": "[   \n    {\n        \"name\": \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"update()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"日志简报\",\n        \"type\": \"button\",\n        \"action\": \"Updatelog()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"用户名/邮箱\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"密码\",\n        \"type\": \"password\"\n    },\n    {\n        \"name\": \"注册\",\n        \"type\": \"button\",\n        \"action\": \"reg()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"登录\",\n        \"type\": \"button\",\n        \"action\": \"Login()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"登出\",\n        \"type\": \"button\",\n        \"action\": \"out()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"name\": \"◀◎展示登录信息◎▶\",\n        \"type\": \"button\",\n        \"action\": \"show()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"◎↓网络书架功能区↓◎\",\n        \"type\": \"button\",\n        \"action\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"书籍ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"添加网络书架\",\n        \"type\": \"button\",\n        \"action\": \"AFBook(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"移除网络书架\",\n        \"type\": \"button\",\n        \"action\": \"AFBook(0)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"name\": \"打开书架\",\n        \"type\": \"button\",\n        \"action\": \"BookShelf()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"◎↓本地书架功能区↓◎\",\n        \"type\": \"button\",\n        \"action\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"name\": \"放置\",\n        \"type\": \"button\",\n        \"action\": \"bookinto()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        \"name\": \"删除\",\n        \"type\": \"button\",\n        \"action\": \"bookmove('one')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        \"name\": \"⚠️清空⚠️\",\n        \"type\": \"button\",\n        \"action\": \"bookmove('all')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        \"name\": \"打开本地书架\",\n        \"type\": \"button\",\n        \"action\": \"inBookShelf()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    }\n]",
    "loginUrl": "var ul = source.key;\nif (!String(source.getVariable())) {\n    r = []\n    source.setVariable(JSON.stringify(r));\n}\n\nfunction reg() {\n    java.startBrowser(\"https://alicesw.org/user/user/reg.html\", \"注册账号\");\n}\nfunction Updatelog() {\n\tlet cont = String(source.variableComment);\n\tlet log = java.base64Decode(cont);\njava.longToast(\"\\n\"+log);\n\t}\nfunction login() {}\n\nfunction Login() {\n    cookie.removeCookie(ul);\n    const loginul = \"https://alicesw.org/user/user/login.html\"\n    const codeul = \"https://alicesw.org/user/user/verify.html\"\n\n    const na = result['用户名/邮箱'];\n    const pa = result['密码']\n    if (String(na && pa)) {\n        let phpid = java.get(codeul, {}).header(\"set-cookies\");\n        java.log(phpid);\n        let code = java.getVerificationCode(codeul);\n        let body = `username=${na}&password=${pa}&code=${code}`\n        let cook = java.post(loginul, body, {\n            \"x-requested-with\": \"XMLHttpRequest\",\n            \"Cookie\": phpid\n        });\n        let ck = String(cook.cookies()).replace(/[{}]/g, \"\").replace(\",\", \"; \");\n        //java.log(String(ck))\n        let headers = JSON.stringify({\n            \"Cookie\": ck\n        });\n        let usercode = JSON.parse(cook.body()).msg\n        java.toast(usercode);\n        if (ck) {\n            source.putLoginHeader(headers);\n            cookie.replaceCookie(ul, ck);\n        } else {\n            source.removeLoginHeader();\n            cookie.removeCookie(ul)\n        }\n    }\n}\n\nfunction out() {\n    source.removeLoginHeader();\n    cookie.removeCookie(ul);\n    java.toast(\"已退出登录状态\");\n}\n\nfunction show() {\n    let jc = source.getLoginHeaderMap();\n    let us, id, codes\n    if (jc) {\n        let info = jc.get(\"Cookie\").match(/%22%3A%22(\\d+?)%22%2C%22username%22%3A%22(.*?)%22%7D/)\n        us = info[2];\n        id = info[1];\n        codes = \"✔️已登录\";\n    } else {\n        us = \"无\";\n        id = \"无\";\n        codes = \"❌未登录\";\n    }\n    let txt = `\\n◎用户：${us}◎\\n◎用户ID：${id}◎\\n◎登录状态：${codes}◎`\n    java.longToast(txt);\n}\n\nfunction update() {\n    sourcetime = String(source.lastUpdateTime);\n    const upul = \"https://fastly.jsdelivr.net/gh/yezechuandl/source-legado@main/source/爱丽丝书屋.json\"\n    let cc = java.ajax(upul)\n    let uptime = String(JSON.parse(cc)[0].lastUpdateTime)\n    if (Number(uptime) > Number(sourcetime)) {\n        java.toast(\"检测到更新，正在跳转……\");\n        Packages.java.lang.Thread.sleep(2000)\n        java.startBrowser('data:text/html;base64,' + nk, '更新');\n    } else {\n        java.toast(`本地书源版本较新，无需更新。\\n本地书源编辑时间：${timeov(Number(sourcetime))}\\n网络书源更新时间：${timeov(Number(uptime))}`);\n    }\n}\n\nfunction AFBook(ta) {\n    let info = result['书籍ID']\n    if (String(info) && source.getLoginHeaderMap()) {\n        let bookid = info\n        java.log(bookid);\n        try {\n            let ul\n            if (ta) {\n                ul = `https://alicesw.org/user/bookshelf/add?novel_id=${bookid}`\n            } else {\n\n                let src = \"\"\n                for (page = 1;; page++) {\n                    let sr = java.ajax(`https://alicesw.org/user/bookshelf?page=${page}`);\n                    if (!/书架空空如也/.test(sr)) {\n                        src += sr + \"\\n\";\n                    } else {\n                        break;\n                    }\n                }\n                //java.log(\"书籍在书架第\"+page+\"页\");\n                let booklist = src.match(/\\/novel\\/\\d+\\.html/g);\n                let dfid = src.match(/\\/user\\/bookshelf\\/del[^\"]+/g);\n                for (i in booklist) {\n                    if (booklist[i].includes(bookid)) {\n                        ra = dfid[i];\n                        break;\n                    }\n                }\n                ul = source.key + ra;\n            }\n            let msg = java.get(ul, {\n                \"x-requested-with\": \"XMLHttpRequest\"\n            });\n            let point = JSON.parse(msg.body()).msg\n            java.toast(point);\n        } catch(error) {\n            //java.log(error);\n            java.toast('无效操作');\n        }\n    } else if(!String(info)) {\n        java.toast(\"\\n未填入书籍id，请进书籍详情页，或者手动填写。\");\n   } else if(!source.getLoginHeaderMap()) {\n    \tjava.toast(\"未登录，请登录后使用\");\n  }\n}\n\nfunction BookShelf() {\n    if (source.getLoginHeaderMap()) {\n        java.startBrowser(\"https://alicesw.org/user/bookshelf/\", \"书架\");\n    } else {\n        java.toast(\"未登录，请登录后再使用此功能。\");\n    }\n}\n\nfunction inBookShelf() {\n    htm = booklist();\n    java.startBrowser(\"data:text/html;base64,\" + htm, \"书架\");\n}\nvar sgv = source.getVariable();\nvar sg = source.get(\"list\");\n//放置书籍信息至书源变量\nfunction bookinto() {\n    if (String(sg)) {\n        let sgv1 = JSON.parse(sgv);\n        let sg1 = JSON.parse(sg);\n        let exists = sgv1.some(item => {\n            return Number(item.ID) === Number(sg1.ID);\n        });\n        if (!exists) {\n            sgv1.push(sg1);\n            source.setVariable(JSON.stringify(sgv1, null, \"\\t\"));\n            java.toast(\"添加成功\");\n        } else {\n            java.toast(\"书籍已存入本地书架中\");\n        }\n    } else {\n        java.toast('🚫请进入书籍详情页后操作，或者刷新试试')\n    }\n}\n\nfunction bookmove(a) {\n    try {\n        let sgv1 = JSON.parse(sgv);\n        let sg1 = JSON.parse(sg);\n        if (a == \"all\") {\n            source.put(\"list\", '')\n            java.log(source.get(\"list\"));\n            source.setVariable(\"\");\n            java.toast('已清空本地书架');\n        } else {\n            let index = sgv1.findIndex(item => Number(item.ID) === Number(sg1.ID));\n            if (index != -1) {\n                sgv1.splice(index, 1);\n                source.setVariable(JSON.stringify(sgv1, null, \"\\t\"));\n                java.toast(`已从本地删除该书籍。\\n书籍ID：${sg1.ID}`);\n            } else {\n                java.toast('书籍不在本地书架中')\n            }\n        }\n    } catch (err) {\n        java.log(\"错误日志\" + err);\n        java.toast('🚫请进入书籍详情页后操作，或者刷新试试');\n    }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "<js>\nvar bookid = baseUrl.match(/(\\d+)/)[1];\n//发送评论\nconst bookva = book.getVariable(\"custom\");\nif (bookva != false && bookva !== \"\" && source.getLoginHeader()) {\n    const commenturl = \"https://alicesw.org/home/comment/add.html\";\n    let body = `content=${bookva}&type=novel&mid=${bookid}`\n    let headers = {\n        \"x-requested-with\": \"XMLHttpRequest\"\n    }\n    let ok = java.post(commenturl, body, headers).body();\n    java.toast(JSON.parse(ok).msg);\n    book.putCustomVariable(\"\");\n  } else if(!source.getLoginHeader()) {\n\tjava.toast(\"未登录，请登录后操作\");\n\tbook.putCustomVariable(\"\");\n}\n\ntry{\nsourceinfo = source.getLoginInfoMap();\nsourceinfo['书籍ID'] = bookid;\nif (bookid) {\n\tsource.putLoginInfo(JSON.stringify(sourceinfo));\n\t}\n$ = _ => java.getString(_);\nimg = $('[property$=image]@content').includes('alicesw.org') ? $('[property$=image]@content') : \"https://alicesw.org\" + $('[property$=image]@content');\nlist = {\n\t               \"ID\": bookid,\n                \"img\": img,\n                \"name\": $('[property$=book_name]@content'),\n                \"author\": $('[property$=author]@content'),\n                \"info\": $('[property$=description]@content'),\n                \"url\": \"legado://import/addToBookshelf?src=\"+baseUrl\n            }\nsource.put(\"list\",JSON.stringify(list));\n} catch(err) {\n\tjava.log(\"登录UI未初始化保存数据：\"+err);\n\t}\nsrc;\n</js>\n@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"class.fix@p.2:3:4@text##.*[：:]\",\nk:\"class.tg@span@text##\\n##,\",\ni:\"[property$=image]@content\",\nl:\"[property$=latest_chapter_name]@content\",\nm:\"text.查看全部章节@href\",\no:\"[property$=description]@content\"}",
      "intro": "&nbsp;&nbsp;📖书籍ID：{{baseUrl.match(/(\\d+)/)[1]}}\n🏷️标签：@get:{k}\n📜简介：@get:{o}\n🔻评论区：\n❗️右上角书籍变量填入评论后刷新详情页发送评论。❗️\n<js>\nconst Bookid = baseUrl.match(/(\\d+)/)[1];\nconst contul = `https://alicesw.org/index.php?s=/Home/comment/lists/id/${Bookid}/type/novel/limit/5/size/12`\nvar src = java.ajax(contul)\njava.setContent(src);\nvar list = java.getElement('//script[@src=\"/public/static/jquery/jquery.min.js\"]/following-sibling::script[1]');\n\nvar lists = JSON.parse(String(list[0]).match(/var\\s*trre=([\\s\\S]+),page_num/)[1]);\n\nif (lists.length > 0) {\n    var cont = \"\";\n    for (var i = 0; i < lists.length; i++) {\n        var no = lists[i];\n        // 处理一级评论\n        cont += `┌👤用户：${no.user.username}|${no.user.group}|${timeov(Number(no.create_time)*1000)}\\n└评论：${no.content}\\n`;\n        // 处理二级评论，多了不美观，点到为止。（实则也没那么多评论）\n        if (no._ && Array.isArray(no._) && no._.length > 0) {\n            for (var j = 0; j < no._.length; j++) {\n                var sub = no._[j];\n                cont += `  ├👤用户：${sub.user.username}|${sub.user.group}|${timeov(Number(sub.create_time)*1000)}\\n  └评论：${sub.content}\\n`;\n            }\n        }\n    }\n} else {\n    cont = \"本书暂时没有评论喔！\";\n}\nresult = result + \"\\n\" + cont;\nresult;\n</js>",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}"
    },
    "ruleContent": {
      "content": "<js>\nvar url = source.key\n//处理强制登录\nvar nn = String(cookie.getCookie(url));\nvar coks = nn.split('; '); \nckk = coks.filter(item => !item \n.startsWith(\"lf_reader_num\")).join('; ');\ncookie.setCookie(url,ckk);\n\n//自动处理验证\nlet html = src;\n\nfunction txt(sr) {\n    let text;\n    if (src.includes(\"滑动验证\")) {\n        let headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\",\n            \"Referer\": baseUrl\n        };\n        try {\n            let s = src.match(/src=\\\"(\\/huadong[^\"]+)/)[1];\n            let sr = java.get(url + s, headers).body()\n            eval(sr.match(/(key=\\\".+?,value=\\\"[^;]+?\\;)/)[1]);\n            let va = getval(value);\n            let codeul = url + sr.match(/([^\"]+yanzheng_huadong\\.php[^\"]+)/)[1] + `${key}&value=${va}`;\n            let ck = java.get(codeul, headers);\n            java.log(\"验证Cookie：\" + JSON.stringify(ck.cookies()));\n            java.toast(\"检测到验证,尝试自动处理……\");\n            let tx = java.ajax(baseUrl);\n            html = tx;\n            text = java.getString('#chapterContent@html', tx);\n        } catch (error) {\n            java.log(error);\n            text = \"自动验证失败，请重试!\";\n        }\n    } else {\n        text = java.getString('#chapterContent@html', src);\n    }\n    return text;\n}\n\nlet text = txt(html);\n\n//处理重新获取文本时可能会出现的错误。\nlet retryCount = 0;\nconst maxRetries = 3;\nlet result;\nwhile (retryCount < maxRetries) {\n    if (text != false && text !== \"\") {\n        result = text;\n        break;\n    } else {\n    \tjava.toast(`未获取到文本，正在重试...（当前第${retryCount}次重试）`);\n        retryCount++;\n        Packages.java.lang.Thread.sleep(400);\n        text = txt(html);\n    }\n}\n\nif (retryCount === maxRetries) {\n    result = \"重试三次仍未获取到文本，请检查网络状况。\"\n}\nresult;\n</js>",
      "nextContentUrl": "",
      "replaceRegex": "##{{chapter.title}}"
    },
    "ruleExplore": {
      "author": "span.-1@text",
      "bookList": "class.txt-list@li||#list > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "kind": "span.0@a@span@text||.rightBlock_name@text##\\[|\\]",
      "lastChapter": "[class=spanLi]@text",
      "name": "span.0@a@textNodes||.rightBlock_title@text"
    },
    "ruleSearch": {
      "author": ".s4@text",
      "bookList": "class.txt-list@li!0",
      "bookUrl": "a@href",
      "checkKeyWord": "我的美母",
      "coverUrl": "",
      "intro": "",
      "kind": ".s1@text##\\[|\\]",
      "lastChapter": "",
      "name": ".s2@text",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": "class.section-list@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/search.html?keyword={{key}}&page={{page}}",
    "variableComment": "ICAgICAgICAg5rqQ5L2c6ICF77yaICDlpJzms73lt50gICAgICAgICAgCiAgICAgIOKVkOKVkOKVkOKVkOKVpOKVkOKVkOKVkOKVkOKVkArilI7ilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilJIKICDmm7TmlrDml6Xlv5cKICDmlrDlop7vvJrkuabor4TlsZXnpLrkuI7lj5HpgIEgLSAyMDI1LjIuMjYKICDmraPmlofoh6rliqjph43or5UtIDIwMjUuMi4yMwogIOWKoOWFpeacrOWcsOS5puaetuWKn+iDvS0gMjAyNS4yLjIyCiAg5aSE55CG572R57uc5Lmm5p6257+76aG1LSAyMDI1LjIuMTcKICDnvZHnu5zkuabmnrblpITnkIbvvIjku4XnmbvlvZXnlKjmiLfvvIks5Yqo5oCB6I635Y+W5Y+R546w44CCLSAyMDI1LjIuMTIKICDoh6rliqjlpITnkIbmraPmlofpqozor4HjgIItIDIwMjUuMi45CiAg5LyY5YyW55m75b2V6KeE5YiZLTIwMjUuMS4yNArilJbilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilJo=",
    "weight": 0
  }
]
